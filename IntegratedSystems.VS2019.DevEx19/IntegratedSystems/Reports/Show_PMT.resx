<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICD/AAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9/f3ALKysgCampoAh4eHAH9/fwCKiooAwsLCAOLi4gC4uLgA09PTAOHh4QDc3NwA19fXAKSk
        pADFxcUAhYWFANva2gDS2NoAssPMANTU1AB1dHQAjo6OAN7e3gBfud4AVrDXAEOl1wDQ0NAAg4ODANnZ
        2QCLu88AYtD6AF3F6QBczvkAP7bgAB+R0QDs7OwAgoKCAEzA7wA0vvcAa3ByAKfM3gAThuwAP8X3AD/F
        +ADPz88AJbj1AAxTiwBDSUwAZmZmADbA9wAkseAAX5StABiy8gAEb8MAJx4bADAtKABeWlgAQsb4AH+k
        swCPj48AAID2AAxx2ABKR0UAQIWkAEfG+ACgoKAACoLmAAB86QAicJgAPk5YAHaXrgD9/f0ACZfuAAZ9
        6AADfuwAx8fHAKurqwDx8fEA5eXkACC39wDv7+8AvNzlABQPCQBMm8sAm5ubAK6urgDNzc0Ac8ThAAeH
        6QBEREQAB5PwAMDAwAAYtfUABYToAAB/6QANWJcA5efpABq79gA+xfgABgAAAB03TADe5+sAIL/4AAeY
        7gAEBAUAAHvnAAp75wAQeucAFHvnABV55wBoaGgA2OjuABaz5AAmwvkASMb4ACi79gAIsPQAAKHwAACT
        +gAVKj0AAHbiAAB46gABdeYABnPlAAtz5AAPc+UAD3HlAAdp3ABpjakAZWVlAN3o7AASt+gAKMT5AEPH
        +ABLyfgADbDzAAWx/gAJCAkADSAxAAB03wAAdekAAHHlAARv5AALb+MADXDiAAxq4gABYtwAZ4unANbW
        1gBiYmIAHsDvACjI+gBGyvkAVs34ACa9/wBdU08AJDQ+AAB42wAAeuoAAXPlAAdx4wALcOMADW7iAAll
        4AAAXN4AZIekAGNjYwC53OcAIMPvACrK+gBT0PoAc9j7AHvZ+wBv1foAU8//AHJqaABYWVoAOkdOAACG
        2gABje8ACILmAAt95QALd+MABGfgAABc3QBliaMAxeTtACjF7gAz0PsAW9P7AILd/ACc5P4Aoub+AJjj
        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
        AD//AAD//4AD///gD///+B//
</value>
  </data>
</root>