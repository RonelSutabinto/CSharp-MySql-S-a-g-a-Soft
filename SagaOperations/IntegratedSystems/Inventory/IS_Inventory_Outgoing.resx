<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BarManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmd_list.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAD9UlEQVRIS8VWS2hjVRguPhZZKLhRUXTn
        TtzY2Qiu3FZw48KWulBQHBF1KYL4BOlCcLCLuhARIWTozJRotSOOth2dPnLzvLnJ5HGTm0fzunk/J2na
        z/8/Sey0N9Ok2uoHHyfnnP8/33n8/38z8X/BNDk5+eTMzMy56enpp8+Ks7Ozk1NTU+dMJtMjLPqo0+nc
        1HU9n8lkcul0OsdtJpM9AdmPfQZ+R9fpzeVyur6wsPA2iz4WjWqJdruLcrmKWq2BYrF8YtZqdVQqNfpd
        onUqqNcbKJUqol+t1sQ8w2q1fiBEfT6/ms3myaCIRqMJ2jUiEY0YG4MakskU+TWEWDQaA10aWq0mstkc
        NC1OolWxCRa2WCzvC1GvV1F3dtLweDxwOh3w+XwIhVQEg+GRZDu//yb5OeF2e2gsBFn2wuFwQFEUBAIh
        uFwusS5vYnFxsSfqdstqLJbA9raEtbV14ezz3Rybsqxgff06Nje3RN9ud2J1dY2EXKJ/48YGzf8BPpjF
        0helSTUcjtBJvURFtLSRE/Cw39F1eq0XicQOzOb+9UqSXVUUvzipZLP/TZtNEmOnwa0tG1Q1SqLmnihF
        r1qv1ynaStDzRWRyBWT1ouhz9DFLpfLYHPgcZbPZxNLSUk+UclTlcE6V27BKKWwEC7jmSeNPam/H/v7+
        SJJVz/gOoJTpiVLWClElUYV1Q8VVm4p3vnFj/mpEGDKCwaCISI7SYbTb6UkkSfxutVp9LyMMoi6tgife
        lfDwWwE88GYSH1+JC0MG3QZF3w5SqdQh8hhVH5GLtRoXgRr29vb6XkYYRCPZBp77PIJnP9vBM5/E8d31
        jDBk3Omkg3w8Tuh2GER7oDfZ71J7eBFetNvtDuW4ggyDaO3WLiS1RNdchjdeQbLQFIanCYOoP1nFL44E
        fFoa3/4awPfrmjBk8NuFw2HKNfVYRqNRdDqdvpcRBlE5XsX5r12YvqDgqfcCmPshJgwZHDS8aCQSGcpQ
        KCTenW3a7XbfywiDqCdWgelVGXe/EoPptSQ+vZIQhgxeWJZleL1eA1msl6OjYRBt0Df1d6WMFXcZP7uK
        0PSDfCsUCuK0nB5HSf7/Lnrbu100bnXQ6uz2R04XBlFNb+BHKQmnquM3dxLX5IM85SrDH+pR5Pp63FUb
        RL1UBs1rQZhXg3j5Kzcu/HRQBjlQuBjwB3kY/3EZdEbLePC8Hfe/ruK+N9L46PJBIOXz+aFlkEl/uoQQ
        Ry3zRCdN5Ft4aV7DC18m8fwXGi5t68KQMaoMcmUaBwPRx+kU6f7YmWN5eflDFn1oZWVlnt7jEvGifUC7
        dJH7p0mbzXZ5bm7uRRa9i3hvn/ecMQca/zUmJv4CZgkTAAERVNEAAAAASUVORK5CYII=
</value>
  </data>
</root>