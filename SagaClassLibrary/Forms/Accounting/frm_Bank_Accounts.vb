Imports DevExpress.XtraEditors
Imports MyClassLibrary.Classes
Imports SagaClassLibrary.classes
Imports System.Windows.Forms

Namespace Forms.Accounting

    Public Class frm_Bank_Accounts

        Sub New()
            If Me.xuc_bank Is Nothing Then
                Me.xuc_bank = New Controls.Accounting.xuc_Bank()
            End If

            InitializeComponent()

            Dim BtnCancel = New DevExpress.XtraEditors.SimpleButton
            AddHandler BtnCancel.Click, AddressOf BtnCancel_Click

            class_Procedures.Initialize_Form(Me, DockManager, gridView, BtnCancel, xuc_bank.LayoutControl, xuc_Settings)

            class_Saga_Procedures.Initialize_BarManager(Me, barManager, xuc_Settings)

            AddHandler Me.EntityInstantFeedbackSource.GetQueryable, AddressOf EntityInstantFeedbackSource_GetQueryable
            AddHandler Me.EntityInstantFeedbackSource.DismissQueryable, AddressOf EntityInstantFeedbackSource_DismissQueryable
        End Sub

        ' This event is generated by Data Source Configuration Wizard
        Sub EntityInstantFeedbackSource_GetQueryable(sender As Object, e As DevExpress.Data.Linq.GetQueryableEventArgs)
            ' Instantiate a new DataContext
            Dim dataContext As AccEntities = New AccEntities()
            ' Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.acc_Banks
            ' Assign the DataContext to the Tag property,
            ' to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext
        End Sub

        ' This event is generated by Data Source Configuration Wizard
        Sub EntityInstantFeedbackSource_DismissQueryable(sender As Object, e As DevExpress.Data.Linq.GetQueryableEventArgs)
            ' Dispose of the DataContext
            CType(e.Tag, AccEntities).Dispose()
        End Sub

        Private Sub BtnCancel_Click(ByVal sender As Object, ByVal e As EventArgs)
            Form_Close()
        End Sub

        Private Sub frm_Bank_Accounts_Load(sender As Object, e As EventArgs) Handles MyBase.Load
            class_Saga_Procedures.Initialize_Corporation(RepositoryItemLookUpEdit_Corporation)

            class_Saga_Procedures.Initialize_COA(RepositoryItemLookUpEdit_COA, eCOA_Type.COA_Bank)

            btn_Save.Enabled = class_Saga_Variables.isAccounting
            btn_Delete.Enabled = class_Saga_Variables.isAccounting
        End Sub

        Private Sub frm_Bank_Accounts_Shown(sender As Object, e As EventArgs) Handles MyBase.Shown
            If xuc_Settings.Toggle_Auto_Initialize.IsOn Then xuc_bank.Control_Initialize()
        End Sub

        Private Function Form_Close() As Boolean
            gridView.SaveLayoutToRegistry(Me.Name)
            Return class_Procedures.Form_Close(Me, barManager, DockManager, gridView, xuc_bank.LayoutControl, xuc_Settings, Control.ModifierKeys = Keys.Shift, True)
        End Function

        Private Sub frm_Bank_Accounts_FormClosing(ByVal sender As Object, ByVal e As FormClosingEventArgs) Handles MyBase.FormClosing
            If Not Form_Close() Then e.Cancel = True
        End Sub

        Private Sub btn_Close_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_Close.ItemClick
            Form_Close()
        End Sub

        Private Sub btn_Initialize_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_Initialize.ItemClick

            xuc_bank.Control_Initialize()
        End Sub

        Private Sub btn_Reload_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_Reload.ItemClick
            Data_Load()
        End Sub

        Private Sub Data_Load()

            class_Database.Bind_Data(class_Database.ICSConnection, gridControl, gridView, "SELECT * FROM acc_Banks", "acc_Banks")
        End Sub

        Private Sub RepositoryItemSearchControl_Search_KeyDown(ByVal sender As Object, ByVal e As KeyEventArgs) Handles RepositoryItemSearchControl_Search.KeyDown
            If (TypeOf sender Is BaseEdit) AndAlso (e.KeyCode.Equals(Keys.Enter)) Then
                Try
                    Load_Search((CType(sender, BaseEdit)).Text.Trim)
                Catch ex As Exception
                    class_Procedures.Show_Error(ex)
                End Try
            End If
        End Sub

        Private Sub Load_Search(ByVal sSearch As String)
            If sSearch.Length > 2 Then

                class_Database.Bind_Data(class_Database.ICSConnection, gridControl, gridView, $"SELECT * FROM acc_Banks WHERE Bank_Name LIKE '%{sSearch}%' OR Bank_Description LIKE '%{sSearch}%' OR Notes LIKE '%{sSearch}%'", "acc_Banks")
            End If
        End Sub

        Private Sub Data_Show()
            If gridView.RowCount > 0 Then
                With xuc_bank
                    .ID.EditValue = gridView.GetFocusedRowCellDisplayText(colID)
                    .Bank_Code.Text = gridView.GetFocusedRowCellDisplayText(colBank_Code)
                    .Corporation.EditValue = gridView.GetFocusedRowCellValue(colCorporation)
                    .Bank_Account.Text = gridView.GetFocusedRowCellDisplayText(colBank_Account)
                    .Account_Name.Text = gridView.GetFocusedRowCellDisplayText(colAccount_Name)
                    .Bank_Name.Text = gridView.GetFocusedRowCellDisplayText(colBank_Name)
                    .COA_Code.EditValue = gridView.GetFocusedRowCellValue(colCOA_Code)
                    .Bank_BRSTN.Text = gridView.GetFocusedRowCellDisplayText(colBank_BRSTN)
                    .Bank_Manager.Text = gridView.GetFocusedRowCellDisplayText(colBank_Manager)
                    .Bank_Address.Text = gridView.GetFocusedRowCellDisplayText(colBank_Address)
                    .Bank_Tel_Number.Text = gridView.GetFocusedRowCellDisplayText(colBank_Tel_Number)
                    .Bank_Description.Text = gridView.GetFocusedRowCellDisplayText(colBank_Description)
                    .Notes.Text = gridView.GetFocusedRowCellDisplayText(colNotes)
                End With
            End If
        End Sub

        Private Sub Update_Data_Row()
            If gridView.RowCount > 0 Then
                With gridView
                    .SetFocusedRowCellValue(colBank_Code, xuc_bank.Bank_Code.Text)
                    .SetFocusedRowCellValue(colCorporation, xuc_bank.Corporation.Text)
                    .SetFocusedRowCellValue(colBank_Account, xuc_bank.Bank_Account.Text)
                    .SetFocusedRowCellValue(colAccount_Name, xuc_bank.Account_Name.Text)
                    .SetFocusedRowCellValue(colBank_Name, xuc_bank.Bank_Name.Text)
                    .SetFocusedRowCellValue(colCOA_Code, xuc_bank.COA_Code.EditValue)
                    .SetFocusedRowCellValue(colBank_BRSTN, xuc_bank.Bank_BRSTN.Text)
                    .SetFocusedRowCellValue(colBank_Manager, xuc_bank.Bank_Manager.Text)
                    .SetFocusedRowCellValue(colBank_Address, xuc_bank.Bank_Address.Text)
                    .SetFocusedRowCellValue(colBank_Tel_Number, xuc_bank.Bank_Tel_Number.Text)
                    .SetFocusedRowCellValue(colBank_Description, xuc_bank.Bank_Description.Text)
                    .SetFocusedRowCellValue(colNotes, xuc_bank.Notes.Text)
                End With
            End If
        End Sub

        Private Sub gridView_FocusedRowChanged(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs) Handles gridView.FocusedRowChanged
            If xuc_Settings.Toggle_Select.IsOn Then Data_Show()
        End Sub

        Private Sub gridView_KeyDown(sender As Object, e As KeyEventArgs) Handles gridView.KeyDown
            If gridView.DataRowCount > 0 And gridView.SelectedRowsCount > 0 Then
                Select Case e.KeyValue
                    Case Keys.Enter
                        Data_Show()

                    Case Keys.F2
                        Me.xuc_bank.Select()

                End Select
            End If
        End Sub

        Private Sub btn_Preview_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_Preview.ItemClick
            gridView.ShowRibbonPrintPreview()
        End Sub

        Private Sub btn_New_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_New.ItemClick
            xuc_bank.Control_New(xuc_Settings.Toggle_Clear_On_Action.IsOn)
        End Sub

        Private Sub btn_Save_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_Save.ItemClick

            If xuc_bank.Control_Save() AndAlso xuc_Settings.Toggle_Auto_Reload.IsOn Then
                btn_Reload_ItemClick(sender, e)
            Else
                Update_Data_Row()
            End If
        End Sub

        Private Sub gridView_PrintInitialize(ByVal sender As Object, ByVal e As DevExpress.XtraGrid.Views.Base.PrintInitializeEventArgs) Handles gridView.PrintInitialize
            class_Procedures.Initialize_Printing(e)
        End Sub

        Private Sub btn_Delete_ItemClick(ByVal sender As Object, ByVal e As DevExpress.XtraBars.ItemClickEventArgs) Handles btn_Delete.ItemClick


        End Sub

    End Class

End Namespace