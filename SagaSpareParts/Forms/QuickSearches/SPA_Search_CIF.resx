<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Add.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ov7ud/8LOTBAiXS5MP4AAAAASUVORK5CYII=
</value>
  </data>
</root>